# ggplot2
library(tidyverse)
data <- read_csv("D:/Data Analysis with R Programming/Week 1/penguins.csv")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
geom_smooth() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
geom_smooth(method = "loess", formula = "y ~ x", se = FALSE) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
geom_smooth(method = "loess", formula = "y ~ x", se = FALSE, col = "black", size = 2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
geom_smooth(method = stats::lm, formula = "y ~ x", se = FALSE, col = "black", size = 2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point(size = 2) +
geom_smooth(method = stats::lm, formula = "y ~ x", se = FALSE, col = "black", size = 1.5) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_boxplot()+
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_boxplot() +
geom_point() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_point() +
geom_boxplot() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_point() +
geom_boxplot(aes(alpha = 0.5)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None") +
facet_wrap(~ species)
hotel <- read_csv("D:\\Data Analysis with R Programming\\Week 3\\hotel_bookings.csv", show_col_types = FALSE)
colnames(hotel)
hotel %>% ggplot(aes(x = lead_time, y = children)) +
geom_point()
hotel %>% ggplot(aes(x = children, y = lead_time)) +
geom_point()
hotel %>% ggplot(aes(x = children, y = lead_time)) +
geom_point(col = "red", size = 1.2, alpha = 0.5) +
geom_boxplot()
hotel %>% ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_point(col = "red", size = 1.2, alpha = 0.5) +
geom_boxplot()
hotel %>% ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_point(col = "red", size = 1.2, alpha = 0.5) +
geom_boxplot(aes(fill = as.factor(children)))
hotel %>% ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_point(col = "red", size = 1.2, alpha = 0.8) +
geom_boxplot(aes(fill = as.factor(children)), alpha = 0.5)
hotel %>% filter(!is.na(children) & !is.na(lead_time)) %>%
ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_point(col = "red", size = 1.2, alpha = 0.8) +
geom_boxplot(aes(fill = as.factor(children)), alpha = 0.5) +
theme(legend.position = "None")
hotel %>% filter(!is.na(children) & !is.na(lead_time)) %>%
ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_jitter(col = "red", size = 1.2, alpha = 0.8) +
geom_boxplot(aes(fill = as.factor(children)), alpha = 0.5) +
theme(legend.position = "None")
hotel %>% filter(!is.na(children) & !is.na(lead_time)) %>%
ggplot(aes(x = as.factor(children), y = lead_time)) +
geom_boxplot(aes(fill = as.factor(children)), alpha = 0.5) +
theme(legend.position = "None")
hotel %>% filter(!is.na(children) & !is.na(stays_in_weekend_nights)) %>%
ggplot(aes(x = as.factor(children), y = stays_in_weekend_nights)) +
geom_line()
hotel %>% filter(!is.na(children) & !is.na(stays_in_weekend_nights)) %>%
ggplot(aes(x = as.factor(children), y = stays_in_weekend_nights)) +
geom_col(aes(col = as.factor(children)))
hotel %>% filter(!is.na(children) & !is.na(stays_in_weekend_nights)) %>%
ggplot(aes(x = as.factor(children), y = stays_in_weekend_nights)) +
geom_col(aes(fill = as.factor(children))) +
theme(legend.position = "None")
hotel %>% filter(!is.na(children) & !is.na(stays_in_weekend_nights)) %>%
ggplot(aes(x = as.factor(children), y = stays_in_weekend_nights)) +
geom_col(aes(fill = as.factor(children))) +
theme(legend.position = "None") +
scale_y_log10()
hotel %>% filter(!is.na(children) & !is.na(stays_in_weekend_nights)) %>%
ggplot(aes(x = as.factor(children), y = stays_in_weekend_nights)) +
geom_col(aes(fill = as.factor(children))) +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_point() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point() +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None")
geom_point(aes(col = as.factor(species), size = 2) +
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point(aes(col = as.factor(species), size = 2)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point(aes(col = as.factor(species), size = 2)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point(aes(col = as.factor(species), size = 2)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_void() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point(aes(col = as.factor(species), size = 2)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, shape = as.factor(species))) +
geom_point(aes(col = as.factor(species), size = 1.5)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
geom_point(aes(alpha = as.factor(species), size = 1.5)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000), col = as.factor(species))) +
geom_point(aes(alpha = as.factor(species), size = 1.5)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000), col = as.factor(species)) +
geom_point(aes(alpha = as.factor(species), size = 1.5)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000), col = as.factor(species)) +
geom_point(aes(alpha = as.factor(species), size = 1.2)) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000), col = as.factor(species)) +
geom_tilet(size = 1.2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000), col = as.factor(species)) +
geom_tile(size = 1.2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, col = as.factor(species))) +
geom_tile(size = 1.2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_tile(size = 1.2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm/10, y = body_mass_g/1000, fill = as.factor(species))) +
geom_tile(size = 2) +
xlab("Flipper length (in cm)") +
ylab("Body mass (in kg)") +
theme_bw() +
theme(legend.position = "None")
data %>% ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = "y~x", col = "violet") +
geom_smooth(method = "loess", formula = "y~x", col = "blue") +
geom_smooth(method = "gam", formula = "y~x", col = "red")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = "y~x", col = "violet") +
geom_smooth(method = "loess", formula = "y~x", col = "blue") +
geom_smooth(method = "gam", formula = "y~x", col = "red")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = "y ~ x", col = "violet") +
geom_smooth(method = "loess", formula = "y ~ x", col = "blue") +
geom_smooth(method = "gam", formula = "y ~ s(x)", col = "red")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = "y ~ x", col = "red") +
geom_smooth(method = "loess", formula = "y ~ x", col = "blue")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g, col = species)) +
geom_point() +
geom_smooth(method = "loess", formula = "y ~ x")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_density(col = "black")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_density()
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot() +
geom_density(aes(x = flipper_length_mm, y = body_mass_g))
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_density(aes(x = flipper_length_mm, y = body_mass_g))
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_density2d(aes(x = flipper_length_mm, y = body_mass_g))
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(col = species)) +
geom_density2d(aes(x = flipper_length_mm, y = body_mass_g))
data(diamonds)
force(diamonds)
diamonds %>%
ggplot(aes(x = cut)) +
geom_bar()
diamonds %>%
ggplot(aes(x = cut, fill = cut)) +
geom_bar()
diamonds %>%
ggplot(aes(x = cut, fill = cut)) +
geom_bar() +
theme(legend.position = "None")
diamonds %>%
ggplot(aes(x = cut, col = cut)) +
geom_histogram()
diamonds %>%
ggplot(aes(x = cut, col = cut)) +
geom_histogram(stat = "count")
diamonds %>%
ggplot(aes(x = cut, fill = cut)) +
geom_histogram(stat = "count")
diamonds %>%
ggplot(aes(x = cut, fill = cut)) +
geom_histogram(stat = "count") +
theme(legend.position = "None")
View(diamonds)
diamonds %>%
ggplot(aes(x = cut, fill = color)) +
geom_bar() +
theme(legend.position = "None")
diamonds %>%
ggplot(aes(x = cut, fill = clarity)) +
geom_bar() +
theme(legend.position = "None")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = "y ~ x", col = "red") +
# linear model smoothing can be misleading if we need an accurate trend in the data
geom_smooth(method = "loess", formula = "y ~ x", col = "blue") +
geom_smooth(method = "gam", formula = "y ~ s(x)", col = "blue")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = y ~ x, col = "red") +
# linear model smoothing can be misleading if we need an accurate trend in the data
geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
geom_smooth(method = "gam", formula = y ~ s(x), col = "blue")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = y ~ x, col = "red") +
# linear model smoothing can be misleading if we need an accurate trend in the data
geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
geom_smooth(method = "gam", formula = y ~ s(x), col = "violet")
data %>% filter(!is.na(flipper_length_mm) & !is.na(body_mass_g)) %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(col = "black") +
geom_smooth(method = stats::lm, formula = y ~ x, col = "red") +
# linear model smoothing can be misleading if we need an accurate trend in the data
geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
geom_smooth(method = "gam", formula = y ~ s(x), col = "violet")
diamonds %>%
ggplot(aes(x = cut, fill = clarity)) +
geom_bar() +
theme(legend.position = "None") +
facet_wrap(~ clarity)
View(diamonds)
diamonds %>%
ggplot(aes(x = cut, fill = clarity)) +
geom_bar() +
theme(legend.position = "None") +
facet_wrap(color ~ clarity)
View(hotel)
colnames(hotel)
hotel %>%
ggplot(aes(x = lead_time, y = stays_in_week_nights)) +
geom_point() +
facet_wrap(arrival_date_month ~ assigned_room_type)
hotel %>% ggplot(aes(x = distribution_channel)) +
geom_bar()
hotel %>% ggplot(aes(x = distribution_channel, fill = distribution_channel)) +
geom_bar()
hotel %>% ggplot(aes(x = distribution_channel, fill = deposit_type)) +
geom_bar()
hotel %>% ggplot(aes(x = distribution_channel, fill = distribution_channel)) +
geom_bar() +
facet_grid(~ deposit_type)
gc()
install.packages(c("arrow", "reticulate", "xfun"))
data <- read.csv("D:/Data Analysis with R Programming/Week 3/hotel_bookings.csv")
library(tidyverse)
View(data)
colnames(data)
data |> subset(hotel == "City Hotel" & market_segment == "Online TA")
data |> subset(hotel == "City Hotel" & market_segment == "Online TA", select = "lead_time")
data |> subset(hotel == "City Hotel" & market_segment == "Online TA", select = "lead_time")[1]
pff <- data |> subset(hotel == "City Hotel" & market_segment == "Online TA", select = "lead_time")
pff[1]
pff[1][1]
pff[1][1][1]
pff
class(pff)
names(pff)
pff$lead_time[1]
data <- read.csv("D:/Data Analysis with R Programming/Week 3/hotel_bookings.csv")
library(ggplot2)
data
colnames(data)
data |> ggplot(aes(x = children)) +
geom_histogram()
View(data)
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, col = customer_type)) +
geom_point()
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, col = customer_type)) +
geom_boxplot()
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot()
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw()
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(xlab = "Package size", ylab = "Lead time", subtitle = "Lead time distributions for different client cohorts")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(xlabel = "Package size", ylab = "Lead time", subtitle = "Lead time distributions for different client cohorts")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(xaxis = "Package size", ylab = "Lead time", subtitle = "Lead time distributions for different client cohorts")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(xaxis = "Package size", ylab = "Lead time",
subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB - NYC, New York")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(xaxis = "Package size", ylab = "Lead time",
subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text()
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance")
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance",
rotation = 90)
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance",
rotate = 90, col = "red", size = 10)
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance",
angle = 90, col = "red", size = 10)
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance",
angle = 180, col = "red", size = 10)
data |> ggplot(aes(x = (adults + children + babies), y = lead_time, fill = customer_type)) +
geom_boxplot() +
theme_bw() +
ggtitle("Lead time vs package size") +
labs(subtitle = "Lead time distributions for different client cohorts",
caption = "Air BnB Rentals - NYC, New York") +
xlab("Package size") +
ylab("Lead time") +
geom_text(x = 20, y = 400,
label = "Contract clients have the largest interquartile distance",
angle = 90, col = "red", size = 10)
# saving plots
getwd()
setwd("D:/Data Analysis with R Programming/Week 4/")
# saving plots
getwd()
ggsave("dummy.png", width = 20, height = 10, units = "in")
ggsave("dummy.png", width = 10, height = 5, units = "in")
